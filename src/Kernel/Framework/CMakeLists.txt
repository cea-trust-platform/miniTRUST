file(GLOB srcs [A-Z|a-z]*.cpp [A-Z|a-z]*.c [A-Z|a-z]*.f)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}  ${TRUST_ROOT}/include/backward  ${TRUST_ICOCOAPI}/include  ${TRUST_LATAFILTER}/include  ${TRUST_MEDCOUPLING_ROOT}/include  ${TRUST_ROOT}/src/Kernel/Champs  ${TRUST_ROOT}/src/Kernel/Champs_dis  ${TRUST_ROOT}/src/Kernel/Cond_Lim  ${TRUST_ROOT}/src/Kernel/Geometrie  ${TRUST_ROOT}/src/Kernel/ICoCo  ${TRUST_ROOT}/src/Kernel/Math/Matrices  ${TRUST_ROOT}/src/Kernel/Math/SolvSys  ${TRUST_ROOT}/src/Kernel/Math  ${TRUST_ROOT}/src/Kernel/MEDimpl  ${TRUST_ROOT}/src/Kernel/Operateurs  ${TRUST_ROOT}/src/Kernel/Schemas_Temps  ${TRUST_ROOT}/src/Kernel/Solveurs  ${TRUST_ROOT}/src/Kernel/Statistiques_temps  ${TRUST_ROOT}/src/Kernel/Utilitaires  ${TRUST_ROOT}/src/Kernel/VF/Champs  ${TRUST_ROOT}/src/Kernel/VF/Zones )
add_library(obj_noyau OBJECT  ${srcs} )
set(listlibs ${listlibs} noyau PARENT_SCOPE    )
add_custom_target(check_sources_noyau   COMMAND check_sources.sh ${CMAKE_CURRENT_SOURCE_DIR} ) #COMMENT  "checking code validity noyau" )
add_DEPENDENCIES(obj_noyau check_sources_noyau)
if(COMPIL_DYN)
  add_library(noyau SHARED   $<TARGET_OBJECTS:obj_noyau> )
  install(TARGETS noyau  DESTINATION lib)
endif(COMPIL_DYN)
