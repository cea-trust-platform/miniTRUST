file(GLOB srcs [A-Z|a-z]*.cpp [A-Z|a-z]*.c [A-Z|a-z]*.f)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}  ${TRUST_ROOT}/include/backward  ${TRUST_ROOT}/src/Kernel/Champs_dis  ${TRUST_ROOT}/src/Kernel/Cond_Lim  ${TRUST_ROOT}/src/Kernel/Framework  ${TRUST_ROOT}/src/Kernel/Geometrie  ${TRUST_ROOT}/src/Kernel/Math/Matrices  ${TRUST_ROOT}/src/Kernel/Math  ${TRUST_ROOT}/src/Kernel/Utilitaires  ${TRUST_ROOT}/src/Kernel/VF/Zones  ${TRUST_ROOT}/src/ThHyd/Incompressible/Cond_Lim  ${TRUST_ROOT}/src/ThSol  ${TRUST_ROOT}/src/VDF/Champs  ${TRUST_ROOT}/src/VDF/Operateurs/Eval_Conv  ${TRUST_ROOT}/src/VDF/Operateurs/Eval_Diff_Dift  ${TRUST_ROOT}/src/VDF/Operateurs/Eval_Divers  ${TRUST_ROOT}/src/VDF/Zones)
add_library(obj_itvdf OBJECT  ${srcs} )
set(listlibs ${listlibs} itvdf PARENT_SCOPE    )
add_custom_target(check_sources_itvdf   COMMAND check_sources.sh ${CMAKE_CURRENT_SOURCE_DIR} ) #COMMENT  "checking code validity itvdf" )
add_DEPENDENCIES(obj_itvdf check_sources_itvdf)
if(COMPIL_DYN)
  add_library(itvdf SHARED   $<TARGET_OBJECTS:obj_itvdf> )
  install(TARGETS itvdf  DESTINATION lib)
endif(COMPIL_DYN)
